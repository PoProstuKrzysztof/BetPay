@page "/statistics"
@inject IRepositoryWrapper RepositoryWrapper

@if (isLoading)
{
    <div>Loading...</div>
}
else
{
    <SfDashboardLayout CellSpacing="@(new double[]{10 ,10 })" CellAspectRatio="2" Columns="2">
        <DashboardLayoutPanels>
            <DashboardLayoutPanel SizeX="2" MaxSizeY="2" Column="1">
                <HeaderTemplate></HeaderTemplate>
                <ContentTemplate>
                    <BetPay.Components.Controls.SummaryColumnChartComponent MonthlyBalanceData="monthlyBalanceData" ></BetPay.Components.Controls.SummaryColumnChartComponent>
                </ContentTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel>
                <HeaderTemplate></HeaderTemplate>
                <ContentTemplate>
                    <BetPay.Components.Controls.EventCategoriesChartComponent EventsCategoriesData="eventsCategoriesData"></BetPay.Components.Controls.EventCategoriesChartComponent>
                </ContentTemplate>
            </DashboardLayoutPanel>
        </DashboardLayoutPanels>
    </SfDashboardLayout>
}

<style>
    .e-panel-content {
        text-align: center;
        margin-top: 10px;
    }
</style>

@code {
    private bool isLoading = true;
    private IEnumerable<MonthlyBalance>? monthlyBalanceData;
    private IEnumerable<EventCategoryChart>? eventsCategoriesData;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Sekwencyjne ładowanie danych
            monthlyBalanceData = await RepositoryWrapper.BetRepository.GetAllMonthlyBalanceSummariesAsync();
            eventsCategoriesData = await RepositoryWrapper.EventRepository.GetAllEventsWithCategoryAsync();
            isLoading = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
            isLoading = false;
        }
    }
}

