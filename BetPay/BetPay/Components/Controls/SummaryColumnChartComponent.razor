@inject IRepositoryWrapper RepositoryWrapper;

@if (MonthlyBalanceData != null)
{
    <SfChart Title="Last 12 Months">
        <ChartEvents OnPointRender="@PointRender"></ChartEvents>
        <ChartTooltipSettings Enable="true" Fill="#191c24"></ChartTooltipSettings>

        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" 
                          Title="Date"
                          Format="yyyy MM"
                          EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                          RangePadding="ChartRangePadding.Normal"
                          IntervalType="IntervalType.Months"
                          LabelPadding="5"
                          Minimum="new DateTime(2023,4,1)"
                          Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>

        <ChartPrimaryYAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Double" 
                          Title="Income">
        </ChartPrimaryYAxis>

        <ChartSeriesCollection>
            <ChartSeries Type="ChartSeriesType.Column" 
                        DataSource="MonthlyBalanceData" 
                        XName="MonthDate" 
                        YName="Balance">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Middle">
                        <ChartDataLabelFont FontWeight="600" Color="#FDFAF6" ></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
                <ChartCornerRadius TopRight="10" TopLeft="10" BottomLeft="10" BottomRight="10"></ChartCornerRadius>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
}

@code {
    [Parameter]
    public IEnumerable<MonthlyBalance>? MonthlyBalanceData { get; set; }

    /// <summary>
    /// Based on value, changes the color of the column
    /// </summary>
    /// <param name="args"></param>
    public void PointRender(PointRenderEventArgs args)
    {
        if (args.Point.YValue < 0)
        {
            args.Fill = "#B4182D";
        }
        else
        {
            args.Fill = "#0A7075";
        }
    }
}