@using Syncfusion.Blazor.Charts
<h3><center>Statistics</center></h3>
@inject IRepositoryWrapper RepositoryWrapper


<SfChart Title="Summary" >
    <ChartEvents OnPointRender="@PointRender"></ChartEvents>
    <ChartTooltipSettings Enable="true" Fill="#191c24"></ChartTooltipSettings>

    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" Title="Date"
                       Format="yyyy MM"
                       EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                       RangePadding="ChartRangePadding.Normal"
                       IntervalType="IntervalType.Months"
    LabelPadding="5"
    Minimum="new DateTime(2023,4,1)"
    Interval="1">
        <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
    </ChartPrimaryXAxis>

    <ChartPrimaryYAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Double" Title="Income"></ChartPrimaryYAxis>

    <ChartSeriesCollection>
        <ChartSeries Type="ChartSeriesType.Column" DataSource="MonthlyIncomes" XName="MonthDate" YName="NetIncome" 
        ColumnWidth="0.5"  >
            <ChartMarker>
                <ChartDataLabel Position="LabelPosition.Middle" Visible="true">
                    <ChartDataLabelFont FontWeight="700" Color="#191c24"></ChartDataLabelFont>
                </ChartDataLabel>
            </ChartMarker>
            <ChartCornerRadius TopRight="10" TopLeft="10" BottomLeft="10" BottomRight="10"></ChartCornerRadius>
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

<SfAccumulationChart Title="Category"  EnableAnimation="true" >
    <AccumulationChartSeriesCollection>
        <AccumulationChartSeries PointColorMapping="Fill" DataSource="EventsCategories" XName="Category" YName="Percentage"
                                 Name="Category"     
                                 Explode="true">
            <AccumulationDataLabelSettings Visible="true" 
                Name="Percentage" 
                Position="AccumulationLabelPosition.Outside">
                 <AccumulationChartDataLabelFont Size=0.9rem FontWeight="500"></AccumulationChartDataLabelFont>
            </AccumulationDataLabelSettings>
        </AccumulationChartSeries>
    </AccumulationChartSeriesCollection>
   
    <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
    <AccumulationChartTooltipSettings Enable="true" Format="<b>${point.x}</b><br><b>${point.y}%</b>"></AccumulationChartTooltipSettings>
</SfAccumulationChart>


@code {
    public IEnumerable<Bet>? Bets { get; set; }
    public IEnumerable<MonthlyIncomeChart>? MonthlyIncomes { get; set; }
    public IEnumerable<EventCategoryChart>? EventsCategories { get; set; }



    protected override async Task OnInitializedAsync()
    {
        Bets = await RepositoryWrapper.BetRepository.GetAllBetsAsync();
        MonthlyIncomes = await RepositoryWrapper.BetRepository.GetAllMonthlyIncomeSummariesAsync();
        EventsCategories = await RepositoryWrapper.EventRepository.GetAllEventsWithCategoryAsync();

    }


    /// <summary>
    /// Based on value, changes the color of the column
    /// </summary>
    /// <param name="args"></param>
    public void PointRender(PointRenderEventArgs args)
    {
        if (args.Point.YValue < 0)
        {
            args.Fill = "#FF0000";
        }
        else
        {
            args.Fill = "green";
        }
    }
}

