@inject IRepositoryWrapper RepositoryWrapper
@rendermode InteractiveServer



<SfGrid DataSource="Bets" AllowPaging="true" AllowSelection="true">
    <GridPageSettings PageSize="7"></GridPageSettings>
    <GridEvents RowSelected="RowSelectHandler" TValue="Bet"></GridEvents>
    <GridColumns>
        <GridColumn Field="@nameof(Bet.Stake)" HeaderText="Stake"></GridColumn>
        <GridColumn Field="@nameof(Bet.TotalOdds)" HeaderText="Total Odds"></GridColumn>
        <GridColumn Field="@nameof(Bet.PotentialWin)" HeaderText="Potential Win" Format="C2"></GridColumn>
        <GridColumn Field="@nameof(Bet.BetDate)" Format="d" HeaderText="Bet Date" Type="Syncfusion.Blazor.Grids.ColumnType.Date"></GridColumn>
        <GridColumn Field="@nameof(Bet.Bookmaker)" HeaderText="Bookmaker"></GridColumn>
    </GridColumns>
</SfGrid>

<br />

@if (IsBetSelected)
{
    <center>
        <h2>Events for selected bet!</h2>
    </center>

    <SfGrid DataSource="Events" Query="@BuildQuery()" TValue="Event">
        <GridColumns>
            <GridColumn Field="@nameof(Event.Odds)"></GridColumn>
            <GridColumn Field="EventType.Name"  HeaderText="Event Type"></GridColumn>
            <GridColumn Field="Category.Name" HeaderText="Category"></GridColumn>
            <GridColumn Field="@nameof(Event.Status)"></GridColumn>
        </GridColumns>

    </SfGrid>

 }
else
{
    <center>
        <h2>Select bet to display events!</h2>
    </center>

}


@code {


    private IEnumerable<Bet> Bets { get; set; }
    private IEnumerable<Event> Events { get; set; }
    private Guid? RowIndex { get; set; }
    private bool IsBetSelected;



    protected override async Task OnInitializedAsync()
    {
        Bets = await RepositoryWrapper.BetRepository.GetAllBetsAsync();
        Events = await RepositoryWrapper.EventRepository.GetAllEventsAsync();

    }

    public async Task RowSelectHandler(RowSelectEventArgs<Bet> Args)
    {

        RowIndex = Args.Data.BetId;
        IsBetSelected = true;

    }



    private Query BuildQuery()
    {
        if (RowIndex.HasValue)
        {

            return new Query().Where("BetId", "equal", RowIndex);

        }
        else
        {
            return new Query();
        }

    }

}

