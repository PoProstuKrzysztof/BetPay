// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Bet", b =>
                {
                    b.Property<Guid>("BetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BetDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BookmakerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaxIncluded")
                        .HasColumnType("bit");

                    b.Property<decimal>("Stake")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BetId");

                    b.HasIndex("BookmakerId");

                    b.ToTable("Bets");

                    b.HasData(
                        new
                        {
                            BetId = new Guid("56606df7-634e-488a-a66a-ab3ed1340404"),
                            BetDate = new DateTime(2023, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 2,
                            IsTaxIncluded = true,
                            Stake = 50m
                        },
                        new
                        {
                            BetId = new Guid("054fe7b7-27f9-493f-9133-df2e8bcf5894"),
                            BetDate = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 3,
                            IsTaxIncluded = true,
                            Stake = 100m
                        },
                        new
                        {
                            BetId = new Guid("62f5c2af-4375-4499-98cf-572749a51b5f"),
                            BetDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 1,
                            IsTaxIncluded = false,
                            Stake = 200m
                        },
                        new
                        {
                            BetId = new Guid("e439a252-b890-41ee-ab00-a02c15a7cc99"),
                            BetDate = new DateTime(2023, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 4,
                            IsTaxIncluded = false,
                            Stake = 75m
                        },
                        new
                        {
                            BetId = new Guid("e72472cf-ec75-4128-9015-c78e51947f72"),
                            BetDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 11,
                            IsTaxIncluded = true,
                            Stake = 150m
                        },
                        new
                        {
                            BetId = new Guid("8e026f46-4d89-4ea4-8807-b2a7c77ba13b"),
                            BetDate = new DateTime(2024, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 5,
                            IsTaxIncluded = true,
                            Stake = 120m
                        },
                        new
                        {
                            BetId = new Guid("20856cdf-d0d2-434d-952a-095f35f56adf"),
                            BetDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 13,
                            IsTaxIncluded = true,
                            Stake = 90m
                        },
                        new
                        {
                            BetId = new Guid("2b145187-99ca-4311-845c-31ab4b92804e"),
                            BetDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 10,
                            IsTaxIncluded = true,
                            Stake = 60m
                        },
                        new
                        {
                            BetId = new Guid("46f1ab93-bc71-4fb9-a1d8-38df79356619"),
                            BetDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 1,
                            IsTaxIncluded = true,
                            Stake = 40m
                        },
                        new
                        {
                            BetId = new Guid("ee1611d2-68f2-4bf5-ad7a-74f2a49c6121"),
                            BetDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 7,
                            IsTaxIncluded = true,
                            Stake = 80m
                        },
                        new
                        {
                            BetId = new Guid("3eac28ae-3c55-4819-8e4e-e5bbe160309a"),
                            BetDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 4,
                            IsTaxIncluded = true,
                            Stake = 110m
                        },
                        new
                        {
                            BetId = new Guid("62a473e9-5b1f-4176-b61a-089b5dc0e9e0"),
                            BetDate = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 2,
                            IsTaxIncluded = true,
                            Stake = 70m
                        },
                        new
                        {
                            BetId = new Guid("9bdee23b-918f-4e5e-b353-1558706087b2"),
                            BetDate = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 3,
                            IsTaxIncluded = true,
                            Stake = 95m
                        },
                        new
                        {
                            BetId = new Guid("4a109156-7bd6-44ee-9f14-b5d3f570b6ff"),
                            BetDate = new DateTime(2024, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 13,
                            IsTaxIncluded = true,
                            Stake = 105m
                        },
                        new
                        {
                            BetId = new Guid("aa6daec8-dbc3-4eaa-8ad0-92b10894e53e"),
                            BetDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 5,
                            IsTaxIncluded = true,
                            Stake = 130m
                        },
                        new
                        {
                            BetId = new Guid("5c7173da-2bcf-4477-8239-b6e5bd75b26f"),
                            BetDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 11,
                            IsTaxIncluded = true,
                            Stake = 85m
                        },
                        new
                        {
                            BetId = new Guid("010a8681-e495-4db5-a798-80f74e65a72f"),
                            BetDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 10,
                            IsTaxIncluded = true,
                            Stake = 45m
                        },
                        new
                        {
                            BetId = new Guid("59dffedb-dd1d-448b-aa78-c904d710da1d"),
                            BetDate = new DateTime(2024, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 1,
                            IsTaxIncluded = true,
                            Stake = 65m
                        },
                        new
                        {
                            BetId = new Guid("4ae85ac0-c731-4725-8ec6-ceab35450376"),
                            BetDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookmakerId = 7,
                            IsTaxIncluded = true,
                            Stake = 150m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Bookmaker", b =>
                {
                    b.Property<int>("BookmakerId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookmakerId");

                    b.ToTable("Bookmakers");

                    b.HasData(
                        new
                        {
                            BookmakerId = 1,
                            ImagePath = "/Images/Bookmakers/betclic-icon.jpg",
                            Name = "Betclic"
                        },
                        new
                        {
                            BookmakerId = 2,
                            ImagePath = "/Images/Bookmakers/superbet-icon.jpg",
                            Name = "Superbet"
                        },
                        new
                        {
                            BookmakerId = 3,
                            ImagePath = "/Images/Bookmakers/fortuna-icon.jpg",
                            Name = "Fortuna"
                        },
                        new
                        {
                            BookmakerId = 4,
                            ImagePath = "/Images/Bookmakers/sts-icon.jpg",
                            Name = "STS"
                        },
                        new
                        {
                            BookmakerId = 5,
                            ImagePath = "/Images/Bookmakers/betfan-icon.jpg",
                            Name = "Betfan"
                        },
                        new
                        {
                            BookmakerId = 6,
                            Name = "Fuksiarz"
                        },
                        new
                        {
                            BookmakerId = 7,
                            ImagePath = "/Images/Bookmakers/lvbet-icon.jpg",
                            Name = "LvBet"
                        },
                        new
                        {
                            BookmakerId = 8,
                            Name = "Betters"
                        },
                        new
                        {
                            BookmakerId = 9,
                            Name = "Betcris"
                        },
                        new
                        {
                            BookmakerId = 10,
                            ImagePath = "/Images/Bookmakers/gobet-icon.jpg",
                            Name = "GoBet"
                        },
                        new
                        {
                            BookmakerId = 11,
                            ImagePath = "/Images/Bookmakers/totalbet-icon.jpg",
                            Name = "TotalBet"
                        },
                        new
                        {
                            BookmakerId = 12,
                            Name = "ForBet"
                        },
                        new
                        {
                            BookmakerId = 13,
                            ImagePath = "/Images/Bookmakers/etoto-icon.jpg",
                            Name = "Etoto"
                        },
                        new
                        {
                            BookmakerId = 14,
                            Name = "ComeOn"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Football"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Soccer"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Tennis"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Basketball"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Odds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("BetId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = new Guid("43f0117f-0526-403b-8f29-e0b579158694"),
                            BetId = new Guid("56606df7-634e-488a-a66a-ab3ed1340404"),
                            CategoryId = 1,
                            EventTypeId = 1,
                            Odds = 1.5m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("775646ef-f9d7-482c-aba0-2bc2b883a1a4"),
                            BetId = new Guid("56606df7-634e-488a-a66a-ab3ed1340404"),
                            CategoryId = 2,
                            EventTypeId = 2,
                            Odds = 2.0m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("dc40bafb-abd2-4c2b-bf29-adfc2784d9ce"),
                            BetId = new Guid("56606df7-634e-488a-a66a-ab3ed1340404"),
                            CategoryId = 3,
                            EventTypeId = 3,
                            Odds = 1.7m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("b8dca998-a42e-4a32-a140-238ac26832f8"),
                            BetId = new Guid("054fe7b7-27f9-493f-9133-df2e8bcf5894"),
                            CategoryId = 2,
                            EventTypeId = 1,
                            Odds = 1.6m,
                            Status = 1
                        },
                        new
                        {
                            EventId = new Guid("24a11241-5020-4726-b0a5-fc8df4246d2c"),
                            BetId = new Guid("054fe7b7-27f9-493f-9133-df2e8bcf5894"),
                            CategoryId = 1,
                            EventTypeId = 4,
                            Odds = 2.3m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("6515529f-bda4-4548-931e-ec330d983327"),
                            BetId = new Guid("054fe7b7-27f9-493f-9133-df2e8bcf5894"),
                            CategoryId = 2,
                            EventTypeId = 5,
                            Odds = 2.1m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("1f62cdb9-2271-4c23-a875-b0d6c4e5ad69"),
                            BetId = new Guid("054fe7b7-27f9-493f-9133-df2e8bcf5894"),
                            CategoryId = 1,
                            EventTypeId = 6,
                            Odds = 1.8m,
                            Status = 2
                        },
                        new
                        {
                            EventId = new Guid("602e3c6c-4cb4-4e22-abc9-1fd4a5f6b5fc"),
                            BetId = new Guid("62f5c2af-4375-4499-98cf-572749a51b5f"),
                            CategoryId = 2,
                            EventTypeId = 3,
                            Odds = 1.5m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("6e14b4c6-1c30-48c7-8889-e84196369c68"),
                            BetId = new Guid("62f5c2af-4375-4499-98cf-572749a51b5f"),
                            CategoryId = 1,
                            EventTypeId = 1,
                            Odds = 1.7m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("43fb44f0-6f06-481e-a6ab-c0b8ae8268fc"),
                            BetId = new Guid("62f5c2af-4375-4499-98cf-572749a51b5f"),
                            CategoryId = 3,
                            EventTypeId = 4,
                            Odds = 2.4m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("17e58c2d-4aaf-480d-a094-cbb408ddc385"),
                            BetId = new Guid("62f5c2af-4375-4499-98cf-572749a51b5f"),
                            CategoryId = 2,
                            EventTypeId = 5,
                            Odds = 2.1m,
                            Status = 2
                        },
                        new
                        {
                            EventId = new Guid("695b9a7a-6e39-4a9e-903c-29a5fc13cf97"),
                            BetId = new Guid("62f5c2af-4375-4499-98cf-572749a51b5f"),
                            CategoryId = 1,
                            EventTypeId = 6,
                            Odds = 2.5m,
                            Status = 1
                        },
                        new
                        {
                            EventId = new Guid("58004cc9-4a6e-435d-99dd-7a8d2fe10f50"),
                            BetId = new Guid("e439a252-b890-41ee-ab00-a02c15a7cc99"),
                            CategoryId = 3,
                            EventTypeId = 4,
                            Odds = 2.0m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("44b21f53-351e-4c95-b55a-ae482d3a7ab9"),
                            BetId = new Guid("e439a252-b890-41ee-ab00-a02c15a7cc99"),
                            CategoryId = 2,
                            EventTypeId = 1,
                            Odds = 1.6m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("e3f3fa73-712c-439f-9337-9af0185bd3b2"),
                            BetId = new Guid("e72472cf-ec75-4128-9015-c78e51947f72"),
                            CategoryId = 1,
                            EventTypeId = 3,
                            Odds = 1.9m,
                            Status = 1
                        },
                        new
                        {
                            EventId = new Guid("a7ff257c-3697-4c56-ab85-4b5d0840f3b9"),
                            BetId = new Guid("e72472cf-ec75-4128-9015-c78e51947f72"),
                            CategoryId = 2,
                            EventTypeId = 2,
                            Odds = 2.2m,
                            Status = 0
                        },
                        new
                        {
                            EventId = new Guid("4e5e6bb2-7b65-4f67-9451-0ed49f2fbc71"),
                            BetId = new Guid("e72472cf-ec75-4128-9015-c78e51947f72"),
                            CategoryId = 3,
                            EventTypeId = 5,
                            Odds = 1.5m,
                            Status = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventTypeId");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            EventTypeId = 1,
                            Name = "BTTS"
                        },
                        new
                        {
                            EventTypeId = 2,
                            Name = "1X2"
                        },
                        new
                        {
                            EventTypeId = 3,
                            Name = "Over/Under Goals"
                        },
                        new
                        {
                            EventTypeId = 4,
                            Name = "Corners"
                        },
                        new
                        {
                            EventTypeId = 5,
                            Name = "Yellow Cards"
                        },
                        new
                        {
                            EventTypeId = 6,
                            Name = "Correct Score"
                        },
                        new
                        {
                            EventTypeId = 7,
                            Name = "Double Chance"
                        },
                        new
                        {
                            EventTypeId = 8,
                            Name = "First Goal Scorer"
                        },
                        new
                        {
                            EventTypeId = 9,
                            Name = "Last Goal Scorer"
                        },
                        new
                        {
                            EventTypeId = 10,
                            Name = "Player to Score Anytime"
                        },
                        new
                        {
                            EventTypeId = 11,
                            Name = "Clean Sheet"
                        },
                        new
                        {
                            EventTypeId = 12,
                            Name = "Team to Win Both Halves"
                        },
                        new
                        {
                            EventTypeId = 13,
                            Name = "Half-Time Result"
                        },
                        new
                        {
                            EventTypeId = 14,
                            Name = "Full-Time Result"
                        },
                        new
                        {
                            EventTypeId = 15,
                            Name = "Half-Time/Full-Time"
                        },
                        new
                        {
                            EventTypeId = 16,
                            Name = "Team to Score First"
                        },
                        new
                        {
                            EventTypeId = 17,
                            Name = "First Half Goals"
                        },
                        new
                        {
                            EventTypeId = 18,
                            Name = "Second Half Goals"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Bet", b =>
                {
                    b.HasOne("Domain.Entities.Bookmaker", "Bookmaker")
                        .WithMany("BetList")
                        .HasForeignKey("BookmakerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bookmaker");
                });

            modelBuilder.Entity("Domain.Entities.Event", b =>
                {
                    b.HasOne("Domain.Entities.Bet", "Bet")
                        .WithMany("EventsList")
                        .HasForeignKey("BetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bet");

                    b.Navigation("Category");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("Domain.Entities.Bet", b =>
                {
                    b.Navigation("EventsList");
                });

            modelBuilder.Entity("Domain.Entities.Bookmaker", b =>
                {
                    b.Navigation("BetList");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Domain.Entities.EventType", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
